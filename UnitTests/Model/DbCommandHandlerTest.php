<?php

include_once(dirname(__FILE__) . '/../../Services/Autoloader.php');
require_once dirname(__FILE__) . '/../Config/phpUnitConfig.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-23 at 14:24:49.
 */
class DbCommandHandlerTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var DbCommandHandler
     */
    protected $commandHandler;
    protected $db;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $autoloader = new \LwDirectoryObserver\Services\Autoloader();
        $phpUnitConfig = new phpUnitConfig();
        $config = $phpUnitConfig->getConfig();

        require_once $config["libraries"] . 'lw/lw_object.class.php';
        require_once $config["libraries"] . 'lw/lw_db.class.php';
        require_once $config["libraries"] . 'lw/lw_db_mysqli.class.php';
        require_once $config["libraries"] . 'lw/lw_registry.class.php';

        $db = new lw_db_mysqli($config["lwdb"]["user"], $config["lwdb"]["pass"], $config["lwdb"]["host"], $config["lwdb"]["db"]);
        $db->connect();
        $this->db = $db;

        $this->commandHandler = new \LwDirectoryObserver\Model\DbCommandHandler($this->db, "/ich/bin/der/structurelog/path/");
        $this->commandHandler->setObservePath("/ich/bin/der/observe/path/");

        $this->db->setStatement("CREATE TABLE IF NOT EXISTS lw_directory_observer (
                                                  id int(11) NOT NULL AUTO_INCREMENT,
                                                  date int(8) NOT NULL,
                                                  observed_directory varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  name varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  type varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  operation varchar(2555) COLLATE utf8_unicode_ci NOT NULL,
                                                  size varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  new_size varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                                                  last_change_date bigint(14) NOT NULL,
                                                  PRIMARY KEY (id)
                                                ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1;");
        $this->db->pdbquery();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->db->setStatement("DROP TABLE t:lw_directory_observer ");
        $this->db->pdbquery();
    }

    /**
     * @covers LwDirectoryObserver\Model\DbCommandHandler::addChanges
     * @todo   Implement testAddChanges().
     */
    public function testAddChanges()
    {
        $array = array("files" => array(
                "lovelywallpaper8_1.jpg" => array("deleted" => 1),
                "BenutzerhandbuchVorlage.odt" => array("added" => array("size" => "2.2 MB", "date" => 20130423145741)),
                "template.html" => array("added" => array("size" => "5.36 KB", "date" => 20130423145741))
        ));

        $this->commandHandler->addChanges($array);

        $this->db->setStatement("SELECT id,observed_directory,name,type,operation,size,new_size FROM t:lw_directory_observer WHERE observed_directory = :dir ");
        $this->db->bindParameter("dir", "s", "/ich/bin/der/observe/path/");
        $result = $this->db->pselect();

        $assertedArray = array(
            array(
                "id" => "1",
                "observed_directory" => "/ich/bin/der/observe/path/",
                "name" => "lovelywallpaper8_1.jpg",
                "type" => "files",
                "operation" => "deleted",
                "size" => "",
                "new_size" => ""),
            array(
                "id" => "2",
                "observed_directory" => "/ich/bin/der/observe/path/",
                "name" => "BenutzerhandbuchVorlage.odt",
                "type" => "files",
                "operation" => "added",
                "size" => "2.2 MB",
                "new_size" => ""),
            array
                (
                "id" => "3",
                "observed_directory" => "/ich/bin/der/observe/path/",
                "name" => "template.html",
                "type" => "files",
                "operation" => "added",
                "size" => "5.36 KB",
                "new_size" => "")
        );

        $this->assertEquals($assertedArray, $result);
    }

    /**
     * @covers LwDirectoryObserver\Model\DbCommandHandler::saveCompleteSize
     * @todo   Implement testSaveCompleteSize().
     */
    public function testSaveCompleteSize()
    {
        $completeSize = 2234794;
        $this->commandHandler->saveCompleteSize($completeSize);

        $this->db->setStatement("SELECT id,observed_directory,name,type,operation,size,new_size FROM t:lw_directory_observer WHERE id = 1 ");
        $result = $this->db->pselect1();
        
        $assertedArray = array(
            "id" => "1",
            "observed_directory" => "/ich/bin/der/observe/path/",
            "name" => "",
            "type" => "completesize",
            "operation" => "",
            "size" => "2.13 MB",
            "new_size" => "");
        
        $this->assertEquals($assertedArray, $result);
    }
}
